networks:
  celery-decipher:
    driver: bridge
volumes:
  decipher-data:
    driver: local
  decipher-rabbitmq:
    driver: local
services:
  jaeger:
    image: jaegertracing/all-in-one:1.67.0
    container_name: decipher-jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks:
      - celery-decipher
  postgres:
    image: postgres:17-alpine
    container_name: decipher-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - celery-decipher
    volumes:
      - decipher-data:/var/lib/postgresql/data
      - ./docker/postgres/01-init.sql:/docker-entrypoint-initdb.d/init.sql
  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: decipher-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - celery-decipher
    volumes:
      - decipher-rabbitmq:/var/lib/rabbitmq/
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
  db-migrations:
    image: flyway/flyway:11.5-alpine
    container_name: db-migrations
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      -url=jdbc:postgresql://postgres:5432/operational
      -user=postgres
      -password=postgres
      migrate
    networks:
      - celery-decipher
    profiles:
      - one-off
  test-migrations:
    image: flyway/flyway:11.5-alpine
    container_name: test-migrations
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      -url=jdbc:postgresql://postgres:5432/operational_test
      -user=postgres
      -password=postgres
      migrate
    networks:
      - celery-decipher
    profiles:
      - one-off
  celery-worker:
    build:
      context: .
      dockerfile: ./docker/celery/Dockerfile
    container_name: celery-worker
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/healthz" ]
      interval: 3s
      timeout: 2s
      retries: 5
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - celery-decipher
    environment:
      PG_CONNECTION_STRING: postgresql://coo:chief-of-operations@postgres:5432/operational
      CELERY_BACKEND_URL: db+postgresql+psycopg://celery:celery@postgres:5432/celery
      CELERY_BROKER_URL: amqp://op_user:OPERATIONAL@rabbitmq:5672/operational_vhost
    ports:
        - "8001:8000"